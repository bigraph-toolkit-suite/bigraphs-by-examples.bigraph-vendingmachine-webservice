signature Sig {
	VM: 0
	Button1: 0
	Button2: 0
	PHD: 0
	Wallet: 0
	Tresor: 0
	atomic Coin: 1
	atomic Pressed: 0
	atomic Coffee: 0
	atomic Tea: 0
	Container: 0
}

main = {
    println($student)
    println($vendingMachine)
    println($system)
    // export($system, as=png, resourcePath="file:src/test/resources/dump/system.png")
    brs example(Sig) = {
        agents = [$system],
        rules = [$insertCoin, $pushBtn1, $pushBtn2, $giveCoffee, $giveTea],
        preds = [$teaIsEmpty, $coffeeIsEmpty]
    }
    execute($example)
}

val student(Sig): PHD = {
    Wallet - (Coin | Coin)
}

val vendingMachine(Sig): VM = {
    Tresor-brn() | Button1-brn() | Button2-brn() | Container - (Coffee | Coffee) | Container - (Tea | Tea)
}

val system(Sig) = {
    $student | $vendingMachine
}

pred teaIsEmpty(Sig):partial = load(sig=Sig, as=xmi, resourcePath="classpath:vending-machine/bigraphs/teaEmpty.xmi")
pred coffeeIsEmpty(Sig):partial = load(sig=Sig, as=xmi, resourcePath="classpath:vending-machine/bigraphs/coffeeEmpty.xmi")

react insertCoin(Sig) = {
    load(sig=Sig, as=xmi, resourcePath="classpath:vending-machine/bigraphs/insertCoinL.xmi")
}, {
    load(sig=Sig, as=xmi, resourcePath="classpath:vending-machine/bigraphs/insertCoinR.xmi")
}

react pushBtn1(Sig) = {
    load(sig=Sig, as=xmi, resourcePath="classpath:vending-machine/bigraphs/pushBtn1L.xmi")
}, {
    load(sig=Sig, as=xmi, resourcePath="classpath:vending-machine/bigraphs/pushBtn1R.xmi")
}

react pushBtn2(Sig) = {
    load(sig=Sig, as=xmi, resourcePath="classpath:vending-machine/bigraphs/pushBtn2L.xmi")
}, {
    load(sig=Sig, as=xmi, resourcePath="classpath:vending-machine/bigraphs/pushBtn2R.xmi")
}

react giveCoffee(Sig) = {
    load(sig=Sig, as=xmi, resourcePath="classpath:vending-machine/bigraphs/giveCoffeeL.xmi")
}, {
    load(sig=Sig, as=xmi, resourcePath="classpath:vending-machine/bigraphs/giveCoffeeR.xmi")
}

react giveTea(Sig) = {
    load(sig=Sig, as=xmi, resourcePath="classpath:vending-machine/bigraphs/giveTeaL.xmi")
}, {
    load(sig=Sig, as=xmi, resourcePath="classpath:vending-machine/bigraphs/giveTeaR.xmi")
}

listenForPredicateMatch($example, [$teaIsEmpty]) = {
    println("Tea is empty. Notify the vendor for more.")
}

listenForRuleMatch($example , [$insertCoin]) = {
    println("Coin inserted")
}

listenForRuleMatch($example , [$pushBtn1]) = {
    println("Btn1 pushed")
}

listenForRuleMatch($example , [$pushBtn2]) = {
    println("Btn2 pushed")
}

listenForRuleMatch($example , [$giveCoffee]) = {
    println("Give Coffee")
}

listenForRuleMatch($example , [$giveTea]) = {
    println("Give Tea")
}